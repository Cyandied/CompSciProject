import java_cup.runtime.*;

parser code {:
  public void report_error(String message, Object info) {
    System.err.println(message);
  }

  public void report_fatal_error(String message, Object info) {
    report_error(message, info);
    System.exit(1);
  }
:};

terminal            STORE, AS, SEMI, IF, THEN, ELSE, END, THINK, ABOUT;
terminal Integer    NUMBER;
terminal Boolean    BOOL;
terminal String     VAR;

non terminal Expression            expr;
non terminal ArrayList<Expression> expr_list;
non terminal Statement             stm;
non terminal ArrayList<Statement>  stm_list;

/*expr_list ::= expr_list expr_part
            | expr_part
            ; */

stm_list  ::= stm
               {:   ArrayList<Statement> lonely_statement = new ArrayList<Statement>();
                    lonely_statement.add(stm);
                    RESULT = lonely_statement;
                    :}
          |    stm_list stm
               {:   stm_list.add(stm);
                    RESULT = stm_list;
                    :}
          ;

stm       ::= STORE expr AS VAR SEMI
                    {: RESULT = VarDeclaration(VAR, expr); :}
          |    IF expr THEN stm_list:stm_true ELSE stm_list:stm_false END
                    {: RESULT = new If(expr, stm_true, stm_false); :}
          |    THINK expr ABOUT stm_list END
                    {:  :}
          ;   


expr      ::=  NUMBER:n
                    {: RESULT = new Number(n); :}
          |    BOOL:b
                    {: RESULT = new BOOL(b); :}
          |    VAR:var
                    {: RESULT = var; :}
            ;

